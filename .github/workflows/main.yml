
name: Build and Push Images to ECR

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Check out code
      uses: actions/checkout@v2

    # Step 2: Authenticate with Amazon ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    # Step 3: Define environment variables
    - name: Set environment variables
      run: |
        echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
        echo "APP_REPOSITORY=clo835-assignment1-app" >> $GITHUB_ENV
        echo "DB_REPOSITORY=clo835-assignment1-db" >> $GITHUB_ENV
        echo "APP_IMAGE_TAG=app-latest" >> $GITHUB_ENV
        echo "DB_IMAGE_TAG=db-latest" >> $GITHUB_ENV

    # Step 4: Build and Push App Image
    - name: Build and Push App Docker Image
      run: |
        cd Chapter02/kubia  # Update to the correct path for the app project
        ls -ltra
        docker build -t $ECR_REGISTRY/$APP_REPOSITORY:$APP_IMAGE_TAG .
        docker push $ECR_REGISTRY/$APP_REPOSITORY:$APP_IMAGE_TAG

    # Step 5: Build and Push Database Image
    - name: Build and Push Database Docker Image
      run: |
        cd Chapter02/db_project  # Update to the correct path for the database project
        ls -ltra
        docker build -t $ECR_REGISTRY/$DB_REPOSITORY:$DB_IMAGE_TAG .
        docker push $ECR_REGISTRY/$DB_REPOSITORY:$DB_IMAGE_TAG
